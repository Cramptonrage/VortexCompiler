<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Nombre.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Lexema.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Index.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Lineaa.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Columna.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHC8AAAEAIAB0FQAAFgAAACgAAAAcAAAAXgAAAAEAIAAAAAAAkBQAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANmgEhvWmRw/150cYdifHXjcox5136YfYt2o
        IUTgoiYhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACqqgADyo4WRNOYGpPWnBjD2qAb2+GkHebgph3u46kh7eWtIufmrSPc5K4lx+Wv
        JZflsSZP/sYcCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC9dgUrv3sJmc6PE97anhv33KEc/+ClHv/hph7/4qgg/+OrIv/nriT/6bEl/+q0J//rtCj47bgo4Om1
        K6bitCk+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH9/fwK7hhdMvXkJxsN8
        CvnOjRH/15sa/9ebG//WnBv/1Zoa/9abG//WnBv/2Z8c/9uiHv/fpyH/5q4k/+y1J//rtyr97r0sz+q6
        KmX///8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//mQXSt0pWx5gt28B5B//Efwn/w4IN/8eJ
        Ef/LjRT/zI4U/86QFf/Qkhf/0ZYY/9WbGf/Ynhz/26Ef/96mIf/hqiP/57Em/++6Kf/yvizf8b8tcAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADTqCI72Lo81NezQ/+2dxH/unQE/8J+Cf/Eggv/yIcO/8uK
        EP/OjRL/0JEU/9KVFf/Ulxf/1poa/9qfG//epR//46si/+exJf/stij/874r//HALN3ovC9cAAAAAAAA
        AAAAAAAAAAAAAAAAAADGlwkbzqUbqNq6Mv/Ywk3/x6c9/7yMKP+3fxv/uYAZ/7uCGv+7gxz/vIUd/72H
        H/+9iiD/vYsi/76NJP/BjyT/w48j/8aQH//OlR3/26Mh/+mzJ//zwi3/8MIuxfK/LCgAAAAAAAAAAAAA
        AACqqlUGxqYoX8qlGvrQryT/0bxA/9XGUP/Qvkz/yrhK/8m0R//Hs0b/xLRH/8S2SP/EuEn/w7pL/8K8
        TP/CvU3/v7xM/766Sv++tEX/v6xA/8OhNf/JmCf/36km//LCLPTzyDCIAAAAAAAAAAAAAAAAu8NdHsK1
        OLHTrhz/yKcd/8euJv/MvDr/0cZK/9PLU//Ry1T/zsxU/8vNVP/LzlX/yc9W/8fRVv/G0Vb/xNJW/8DT
        Vv++1Vf/vdRY/7vTWP+7zlX/vcFO/8OqO//Zpyr/7bsrzf/bNSsAAAAAAAAAAKy/Q0S5uDzoyagc/8ep
        Hf/Dqx//wq4j/8K0K//DujT/xb88/8XEQ//FyEj/xctM/8TNT//EzlH/xNBU/8LSVv/A1Fj/v9ZY/73X
        WP+72Vn/udpa/7fbW/+40lj/xLpH/9WmLOrrtyxoAAAAAJ+fAAiktylutsA+/7ypK//Epxn/w60g/7+t
        H/+8ryD/urEj/7q0Jv+4tyn/tbos/7O9L/+zvzL/tMI3/7TGO/+yyT//ssxE/7TQSv+301L/utdZ/7nZ
        W/+221r/tN9d/7fYXP/BuET6y5gmnQAAAACToQATobMajrbLQP+0ukn/t6Me/8CpGv/AsCH/vLEi/7my
        I/+3syT/tLYl/7C4Jf+uuif/rLso/6q9Kv+ovyz/pcEt/6TEMP+jxjP/o8o3/6bOP/+u1Uz/tNtZ/7Td
        Xf+y4V7/udRX/8ClN7zIWwAOmKMKGZ2yFZ2uyDT/sspc/7G7S/+vqCj/sqUa/7etHP+5syL/uLYm/7S5
        J/+wuij/rrwp/6u9Kv+pvyv/pcEs/6PCLP+hxC7/nsYu/5vHL/+ayjH/m8w2/6HTRP+t21b/seFf/7Xf
        XP+7wUnH0XYbHJOmExqZsBagpcAk/6fES/+vzmT/rcZb/6u5Sf+prDL/pqYg/6mqHv+prh3/qrUi/6y7
        J/+rvyv/qcIt/6XELf+jwy3/oMQu/53GMP+byDH/mMsy/5TMM/+UzjX/m9RB/6reV/+z5GD/sNZXycyy
        Ox6FqTAVkbAllZ+/JP+ZujH/pMdT/6vSa/+r0W7/qctp/6fGX/+kvFD/obNA/5+wM/+drCX/mawd/5u0
        IP+evCb/oMMr/6DIMP+dyTL/msoy/5fLM/+VzjX/ks80/5DRN/+c2Uj/r+Zg/6vhX8Gu1l0TatSUDH+8
        U3qWvzT/lrco/5S8Of+bxk7/o89m/6fVdv+n13z/pdV7/6TTe/+h0HX/nsts/53GYv+Zvk7/lbU4/5Oy
        Kf+TtyP/lsMq/5jMMv+WzjX/k881/5DQNv+N0jb/ktg//6XhV/6p4mKrAAAAAAD//wJg0o1VfMBX95e5
        Kv+Puzb/jr4+/5DCTP+TyVz/mdBs/5/Xe/+i3If/od2M/6DfkP+e3pH/nNuP/5vYiv+Yz3j/lMRb/464
        N/+LuST/kMgu/5LSOP+P0jf/jNM3/4/aPP+e41Hxq+NlgAAAAAAAAAAAQuO8Ll7Ujc2Mwkr/kLcx/4zA
        Qv+JwUj/iMRP/4nHWf+Jy2X/jNBx/5HWfv+W24r/mt+T/5zjnf+a5KL/mOSk/5jioP+V2Y//kchk/4m5
        Mv+JxSr/j9U4/4rUN/+O3T3/lt5N37Hla0UAAAAAAAAAACTsyA5D47OBZNuT/4e2Rv+LuDr/isRM/4jG
        VP+Exln/gshg/4DLaP+Az3H/gNN6/4PXhP+H3I//juCb/5Xlpf+X6K3/leqz/5Tmrf+Q1IP/h74+/4XH
        Lf+M2jr/i9s9/ZDcSKri/qkJAAAAAAAAAAAAAAAAKOa5MzrisNFi4Jz/gLpa/4W0QP+EwE7/g8lf/4LM
        Z/9/zmz/fM9y/3rRef941H//dteH/3jakf993Zr/huSm/5Dpsv+S7Ln/kuy5/47XiP+CvjX/idk3/4fc
        PeGJ2UFKAAAAAAAAAAAAAAAAAAAAAADUqgYi5K1hM+a181nksP9yyYL/frhb/3+1Tf99wFr/fcxr/3zT
        ef971X//d9aE/3TXiv9y2ZD/cNuX/3Dfof955Kz/iOq3/5Hww/+O6bT/iM5e/4DKKvWD3D6Gf/9/AgAA
        AAAAAAAAAAAAAAAAAAAAAAAADdahExjiq4Ys6rj/S+i8/1/aqP9uzIz/d79v/3e6Yf93wGX/dsx2/3bX
        iP9025L/cdyW/27dm/9s4KP/auKq/3PntP+H7sL/kPHC/4jWeft3uR2mhfJIFQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAH2qAjFd+oqCXuuv8957//T+fA/1rhtv9l16X/cMuN/3bBd/9wwG//bs2B/2/c
        mP9t4qP/bOGn/2jjrf9n5rT/du7B/43zxf+G3ZLHbpwALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABHgqDsX4azWIeu5/y/kuv9C6cX/UOnJ/1fmxP9f3rb/a9Og/2/Fhv9sw33/adOR/2rj
        q/9o57T/Zee4/23wxf+C8Mfnjuu4WwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAZ5bIKG+CxdxzktP8f47X/KOK4/zbmwf9G6sr/UevO/1fpy/9f4r//a9Sm/23Gi/9ky47/ZOGv/2Xt
        wv9l7sb6de/Jo9r+/gcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDe
        tDch4rjfIuq//yLhuP8m4rv/LeS//z3mxv9N6s7/VuzT/1rp0P9l4MD/bc6f/2PIkv9i5bf/Y/PN5Gjt
        yVoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm4LkhJeO+tyju
        x/8n4r7/JuO+/yfjwP8s48L/N+bG/0npzv9W7Nb/Wu3X/2TmzP9r1Kz/Y9Cd/13kutBk9N8wAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ+HEGirkxKEt8M7/LOPD/y3k
        xP8t5MX/LuTF/y7lx/825sr/R+nQ/1ns1/9d7dr/ZurT/2zYsf9byZfDWubFHwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLqyxku5sifM/HT/zLlyP8z5sn/MuXJ/zPl
        y/805sv/NOXM/znmz/9L6dT/X+3c/2Pw3/9s6dH/Y8qgwky7fx4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA15MkTNefNjzjz2f825c3/OObO/zjmz/855tD/OufQ/zrn
        0f865tP/QOjV/1jr3P9m7+T/ae7f/27ZvrlUqVQSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAASP7aBzvnz2s98dr/O+nU/zzn0/8959T/PejV/z/o1v8/6Nf/P+nY/0Dp
        2f9R693/afHn/2vw5vt25tafAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA+6NI5PurY3UL04/9A59f/QOnZ/0Hq2v9C6dz/Qunc/0Tq3f9E6t7/Uevg/2z2
        7f9v8uvpdeviWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATuvXDUXp33lG8OP/RvPl/0Tp3f9G6t//R+vg/0fq4f9I6uL/Seri/1nz6/9w9vH9cPDroWr/
        6QwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABM5d0eSurglkvw5/9P+vH/TPDo/0zt5v9O7ef/TvDr/1X49P9l9PD/dfPwrnLy6ygAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFHj
        4xxK6eVtT+7qxlHt6ftV9/T/VfXz/1Tt7P5d8O3RbvLweHjo6CIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AzP/
        /x5B+v8+TPP+WlDz+VxI/v9DUP//I3H//wkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI63NSuStCtjkLQocZC7
        KjyWty0nl7Mib5SzJFSMsiYUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgsNRL4fAS5eLwEXUksM865bBNeGSty12lLQlPpa9
        MN+Wwzvni75Ft4S8T00AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB//38CgcdjRYTJXciJyVT5jMdN/5HIRv+TxD3rjrk3Zo2/OCSQwj7PmNJN/4rH
        U/+Fy1/Mf81mSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAes9sNn7PbcuH02n/hste/4bFVf+NyE//jsNJ15XASDV/vz8EiMNMdInMWf+I0mX/gtBs/3vP
        crJ40ngRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAedqFFXzW
        fZaB23v/f9Bv/4DKZf+Gy1//icpZ+ovFVpr///8EAAAAAIPBVx2BymOSfc9w/Ybmh/994IvjddyNSgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHPXh0B214XpfdqC/3vP
        dv+A0XH/htRs/4TLYsOIw14rAAAAAAAAAAAAAAAAf9R0GHvUeF932IexdN2Sv2/elk4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGblmQpv25FyduCU/3jciv9+3of/ftd8/33O
        b71/zGY8AAAAAAAAAAAAAAAAAAAAAAAAAABm/5kFc9WLH2/Tjylp4ZYRAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABq1J8Ybd2doHz0qf913JL/ddiJ0njTgIF2yXArAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAatSqDG3bokhw4J50cNqUW3XWiTJ33YgPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAD//wFV1KoGf9+fCFWqqgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////D/wD/w/gAH8PwA
        A/DwAADw4AAA8OAAAHDAAAAwgAAAMIAAABCAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEIAA
        ABCAAAAQwAAAMMAAADDgAABw8AAA8PgAAfD4AAHw/AAD8PwAA/D8AAPw/AAD8PwAA/D8AAfw/gAH8P4A
        B/D/AA/w/4Af8P/AP/D/wD/w/wAf8PwAD/D8AAfw+AIH8PgHB/DwD4fw8B//8PA///Dw///w
</value>
  </data>
</root>